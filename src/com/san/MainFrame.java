/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.san;

import com.san.printer.PrintablePage;
import com.san.printer.paper.PaperSizes;
import java.awt.GraphicsEnvironment;
import java.awt.print.PrinterJob;
import javax.swing.ComboBoxModel;

/**
 *
 * @author M1028704
 */
public class MainFrame extends javax.swing.JFrame {

    private PaperSizes paperSizes;
    private GenerateConfig generateConfig;
    private ComboBoxModel fontNamesModelAbove, fontNamesModelLeft, fontNamesModelRight, fontNamesModelBarcode;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {

        fontNamesModelAbove = new javax.swing.DefaultComboBoxModel(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());
        fontNamesModelLeft = new javax.swing.DefaultComboBoxModel(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());
        fontNamesModelRight = new javax.swing.DefaultComboBoxModel(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());
        fontNamesModelBarcode = new javax.swing.DefaultComboBoxModel(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());

        initComponents();
        this.paperSizes = new PaperSizes("A4");
        generateConfig = new GenerateConfig();
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(paperSizes.getPaperSizes()));
        jComboBox1.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbBarcodeTypes = new javax.swing.JComboBox();
        txtBarcode = new javax.swing.JLabel();
        txtBarcodeText = new javax.swing.JTextField();
        checkAddText = new javax.swing.JCheckBox();
        checkAbove = new javax.swing.JCheckBox();
        txtAbove = new javax.swing.JTextField();
        spinFontSizeAbove = new javax.swing.JSpinner();
        checkBelowLeft = new javax.swing.JCheckBox();
        txtBelowLeft = new javax.swing.JTextField();
        spinFontSizeLeft = new javax.swing.JSpinner();
        spinFontSizeRight = new javax.swing.JSpinner();
        txtBarBelowRight = new javax.swing.JTextField();
        checkBelowRight = new javax.swing.JCheckBox();
        checkBorder = new javax.swing.JCheckBox();
        spinBorderWidth = new javax.swing.JSpinner();
        spinBarcodeFontSize = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        slideZoom = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        spinBarHeight = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        spinBarWidth = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        barcodeImage1 = new com.san.BarcodeImage();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        spinNoOfPages = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cbFontABove = new javax.swing.JComboBox();
        cbFontLeft = new javax.swing.JComboBox();
        cbFontRight = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RemoIot Barcode Label Generator");
        setLocationByPlatform(true);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Barcode Configuration"));

        jLabel1.setText("Barcode Type:");

        cbBarcodeTypes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Code128", "Code128A", "Code128B", "Code128C", "UCC128", "EAN128", "USPS", "ShipmentIdentificationNumber", "SSCC18", "SCC14ShippingCode", "GlobalTradeItemNumber", "EAN13", "Bookland", "UPCA", "RandomWeightUPCA", "Std2of5", "Int2of5", "PDF417", "Code39", "USD3", "Codabar", "USD4", "NW7", "Monarch", "PostNet" }));
        cbBarcodeTypes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBarcodeTypesItemStateChanged(evt);
            }
        });

        txtBarcode.setText("Barcode Text:");

        txtBarcodeText.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBarcodeTextCaretUpdate(evt);
            }
        });
        txtBarcodeText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                txtBarcodeTextCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtBarcodeTextInputMethodTextChanged(evt);
            }
        });

        checkAddText.setSelected(true);
        checkAddText.setText("Add text to barcode");
        checkAddText.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkAddTextItemStateChanged(evt);
            }
        });

        checkAbove.setText("Text above barcode:");
        checkAbove.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkAboveItemStateChanged(evt);
            }
        });
        checkAbove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAboveActionPerformed(evt);
            }
        });

        txtAbove.setEnabled(false);
        txtAbove.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtAboveCaretUpdate(evt);
            }
        });
        txtAbove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAboveActionPerformed(evt);
            }
        });

        spinFontSizeAbove.setModel(new javax.swing.SpinnerNumberModel(10, 10, 70, 1));
        spinFontSizeAbove.setToolTipText("Font Size");
        spinFontSizeAbove.setEnabled(false);
        spinFontSizeAbove.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFontSizeAboveStateChanged(evt);
            }
        });

        checkBelowLeft.setText("Text in B-L of barcode:");
        checkBelowLeft.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBelowLeftItemStateChanged(evt);
            }
        });

        txtBelowLeft.setEnabled(false);
        txtBelowLeft.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBelowLeftCaretUpdate(evt);
            }
        });

        spinFontSizeLeft.setModel(new javax.swing.SpinnerNumberModel(10, 10, 70, 1));
        spinFontSizeLeft.setToolTipText("Font Size");
        spinFontSizeLeft.setEnabled(false);
        spinFontSizeLeft.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFontSizeLeftStateChanged(evt);
            }
        });

        spinFontSizeRight.setModel(new javax.swing.SpinnerNumberModel(10, 10, 70, 1));
        spinFontSizeRight.setToolTipText("Font Size");
        spinFontSizeRight.setEnabled(false);
        spinFontSizeRight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFontSizeRightStateChanged(evt);
            }
        });

        txtBarBelowRight.setEnabled(false);
        txtBarBelowRight.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBarBelowRightCaretUpdate(evt);
            }
        });

        checkBelowRight.setText("Text in B-R of barcode:");
        checkBelowRight.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBelowRightItemStateChanged(evt);
            }
        });
        checkBelowRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBelowRightActionPerformed(evt);
            }
        });

        checkBorder.setText("Add border");
        checkBorder.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBorderItemStateChanged(evt);
            }
        });

        spinBorderWidth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        spinBorderWidth.setToolTipText("Border Width");
        spinBorderWidth.setEnabled(false);
        spinBorderWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinBorderWidthStateChanged(evt);
            }
        });

        spinBarcodeFontSize.setModel(new javax.swing.SpinnerNumberModel(10, 10, 30, 1));
        spinBarcodeFontSize.setToolTipText("Border Width");
        spinBarcodeFontSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinBarcodeFontSizeStateChanged(evt);
            }
        });

        jLabel5.setText("Scale:");

        slideZoom.setValue(100);
        slideZoom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideZoomStateChanged(evt);
            }
        });

        jLabel6.setText("Bar Height:");

        spinBarHeight.setModel(new javax.swing.SpinnerNumberModel(2, 1, 10, 1));
        spinBarHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinBarHeightStateChanged(evt);
            }
        });

        jLabel7.setText("Bar Width:");

        spinBarWidth.setModel(new javax.swing.SpinnerNumberModel(2, 1, 10, 1));
        spinBarWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinBarWidthStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Printable"));

        barcodeImage1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        barcodeImage1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout barcodeImage1Layout = new javax.swing.GroupLayout(barcodeImage1);
        barcodeImage1.setLayout(barcodeImage1Layout);
        barcodeImage1Layout.setHorizontalGroup(
            barcodeImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 266, Short.MAX_VALUE)
        );
        barcodeImage1Layout.setVerticalGroup(
            barcodeImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );

        jLabel2.setText("Preview:");

        jLabel3.setText("Paper Size:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        spinNoOfPages.setModel(new javax.swing.SpinnerNumberModel(20, 1, 100, 1));

        jLabel4.setText("Barcode per page:");

        jButton1.setText("Save to FIle");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinNoOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jButton1))
                            .addComponent(barcodeImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barcodeImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinNoOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbFontABove.setModel(fontNamesModelAbove);
        cbFontABove.setMaximumSize(new java.awt.Dimension(28, 20));
        cbFontABove.setRenderer(new FontComboBoxRenderer());
        cbFontABove.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFontABoveItemStateChanged(evt);
            }
        });

        cbFontLeft.setModel(fontNamesModelLeft);
        cbFontLeft.setRenderer(new FontComboBoxRenderer());
        cbFontLeft.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFontLeftItemStateChanged(evt);
            }
        });

        cbFontRight.setModel(fontNamesModelRight);
        cbFontRight.setRenderer(new FontComboBoxRenderer());
        cbFontRight.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFontRightItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkAbove)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBelowRight)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(txtBarBelowRight, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(22, 22, 22)
                                    .addComponent(spinFontSizeRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(txtBelowLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(spinFontSizeLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(checkBelowLeft)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtAbove, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spinFontSizeAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbFontABove, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFontLeft, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFontRight, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinBarHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spinBarWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(29, 29, 29)
                                    .addComponent(slideZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(checkBorder)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spinBorderWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbBarcodeTypes, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(checkAddText)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spinBarcodeFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtBarcode, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtBarcodeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbBarcodeTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBarcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBarcodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkAddText)
                            .addComponent(spinBarcodeFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkBorder)
                            .addComponent(spinBorderWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(slideZoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spinBarHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(spinBarWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(checkAbove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinFontSizeAbove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBelowLeft)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBelowLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinFontSizeLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(10, 10, 10)
                        .addComponent(checkBelowRight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBarBelowRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinFontSizeRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbFontABove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(cbFontLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(cbFontRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PrinterJob printJob = PrinterJob.getPrinterJob();
        printJob.setJobName("Barcode Generator-page");
        printJob.setPrintable(new PrintablePage(barcodeImage1.getRenderedImage(), (Integer) spinNoOfPages.getValue()));
        if (printJob.printDialog()) {
            try {
                printJob.print();
            } // end try
            catch (Exception ex) {
                ex.printStackTrace();
            } // end Exception catch
        } // end if
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void checkBelowRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBelowRightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBelowRightActionPerformed

    private void checkAboveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAboveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAboveActionPerformed

    private void checkAboveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkAboveItemStateChanged
        // TODO add your handling code here:

        this.txtAbove.setEnabled(this.checkAbove.isSelected());
        this.spinFontSizeAbove.setEnabled(this.checkAbove.isSelected());

        this.generateConfig.isAboveText = checkAbove.isSelected();
        this.generateConfig.aboveText = txtAbove.getText();
        this.generateConfig.aboveTextFontSize = (Integer) spinFontSizeAbove.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_checkAboveItemStateChanged

    private void checkBelowLeftItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBelowLeftItemStateChanged
        // TODO add your handling code here:
        this.txtBelowLeft.setEnabled(this.checkBelowLeft.isSelected());
        this.spinFontSizeLeft.setEnabled(this.checkBelowLeft.isSelected());

        this.generateConfig.isBelowLeftText = checkBelowLeft.isSelected();
        this.generateConfig.belowLeftText = txtBelowLeft.getText();
        this.generateConfig.belowLeftTextFontSize = (Integer) spinFontSizeLeft.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_checkBelowLeftItemStateChanged

    private void checkBelowRightItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBelowRightItemStateChanged
        // TODO add your handling code here:
        this.txtBarBelowRight.setEnabled(this.checkBelowRight.isSelected());
        this.spinFontSizeRight.setEnabled(this.checkBelowRight.isSelected());

        this.generateConfig.isBelowRightText = checkBelowRight.isSelected();
        this.generateConfig.belowRightText = txtBarBelowRight.getText();
        this.generateConfig.belowRightTextFontSize = (Integer) spinFontSizeRight.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_checkBelowRightItemStateChanged

    private void txtBarcodeTextCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtBarcodeTextCaretPositionChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_txtBarcodeTextCaretPositionChanged

    private void txtBarcodeTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtBarcodeTextInputMethodTextChanged

    }//GEN-LAST:event_txtBarcodeTextInputMethodTextChanged

    private void txtBarcodeTextCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBarcodeTextCaretUpdate
        // TODO add your handling code here:
        this.generateConfig.barcodeText = txtBarcodeText.getText();
        if (txtBarcodeText.getText().trim().length() > 0) {
            barcodeImage1.updateBarcode(generateConfig);
        }
    }//GEN-LAST:event_txtBarcodeTextCaretUpdate

    private void checkAddTextItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkAddTextItemStateChanged
        // TODO add your handling code here:
        spinBarcodeFontSize.setEnabled(checkAddText.isSelected());
        this.generateConfig.isAddText = checkAddText.isSelected();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_checkAddTextItemStateChanged

    private void checkBorderItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBorderItemStateChanged
        // TODO add your handling code here:
        spinBorderWidth.setEnabled(checkBorder.isSelected());
        this.generateConfig.isBorder = checkBorder.isSelected();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_checkBorderItemStateChanged

    private void cbBarcodeTypesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBarcodeTypesItemStateChanged
        // TODO add your handling code here:
        this.generateConfig.type = BarcodeType.TYPES.valueOf(cbBarcodeTypes.getSelectedItem().toString());
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_cbBarcodeTypesItemStateChanged

    private void txtAboveCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtAboveCaretUpdate
        // TODO add your handling code here:
        this.generateConfig.aboveText = txtAbove.getText();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_txtAboveCaretUpdate

    private void txtBelowLeftCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBelowLeftCaretUpdate
        // TODO add your handling code here:
        this.generateConfig.belowLeftText = txtBelowLeft.getText();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_txtBelowLeftCaretUpdate

    private void txtBarBelowRightCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBarBelowRightCaretUpdate
        // TODO add your handling code here:
        this.generateConfig.belowRightText = txtBarBelowRight.getText();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_txtBarBelowRightCaretUpdate

    private void spinBarcodeFontSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinBarcodeFontSizeStateChanged
        // TODO add your handling code here:
        this.generateConfig.fontSize = (Integer) spinBarcodeFontSize.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinBarcodeFontSizeStateChanged

    private void spinBorderWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinBorderWidthStateChanged
        // TODO add your handling code here:
        this.generateConfig.borderWidth = (Integer) spinBorderWidth.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinBorderWidthStateChanged

    private void spinFontSizeAboveStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFontSizeAboveStateChanged
        // TODO add your handling code here:
        this.generateConfig.aboveTextFontSize = (Integer) spinFontSizeAbove.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinFontSizeAboveStateChanged

    private void spinFontSizeLeftStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFontSizeLeftStateChanged
        // TODO add your handling code here:
        this.generateConfig.belowLeftTextFontSize = (Integer) spinFontSizeLeft.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinFontSizeLeftStateChanged

    private void spinFontSizeRightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFontSizeRightStateChanged
        // TODO add your handling code here:
        this.generateConfig.belowRightTextFontSize = (Integer) spinFontSizeRight.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinFontSizeRightStateChanged

    private void slideZoomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideZoomStateChanged
        // TODO add your handling code here:
        this.generateConfig.scale = slideZoom.getValue() / 100.0f;
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_slideZoomStateChanged

    private void spinBarHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinBarHeightStateChanged
        // TODO add your handling code here:
        this.generateConfig.barHeight = (int) spinBarHeight.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinBarHeightStateChanged

    private void spinBarWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinBarWidthStateChanged
        // TODO add your handling code here:
        this.generateConfig.barWidth = (int) spinBarWidth.getValue();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_spinBarWidthStateChanged

    private void txtAboveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAboveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAboveActionPerformed

    private void cbFontABoveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFontABoveItemStateChanged
        generateConfig.aboveTextFont = cbFontABove.getSelectedItem().toString();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_cbFontABoveItemStateChanged

    private void cbFontLeftItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFontLeftItemStateChanged
        // TODO add your handling code here:
        generateConfig.belowLeftTextFont = cbFontLeft.getSelectedItem().toString();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_cbFontLeftItemStateChanged

    private void cbFontRightItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFontRightItemStateChanged
        // TODO add your handling code here:
        generateConfig.belowRightTextFont = cbFontRight.getSelectedItem().toString();
        barcodeImage1.updateBarcode(generateConfig);
    }//GEN-LAST:event_cbFontRightItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
//                    break;
//                }
//            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.san.BarcodeImage barcodeImage1;
    private javax.swing.JComboBox cbBarcodeTypes;
    private javax.swing.JComboBox cbFontABove;
    private javax.swing.JComboBox cbFontLeft;
    private javax.swing.JComboBox cbFontRight;
    private javax.swing.JCheckBox checkAbove;
    private javax.swing.JCheckBox checkAddText;
    private javax.swing.JCheckBox checkBelowLeft;
    private javax.swing.JCheckBox checkBelowRight;
    private javax.swing.JCheckBox checkBorder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider slideZoom;
    private javax.swing.JSpinner spinBarHeight;
    private javax.swing.JSpinner spinBarWidth;
    private javax.swing.JSpinner spinBarcodeFontSize;
    private javax.swing.JSpinner spinBorderWidth;
    private javax.swing.JSpinner spinFontSizeAbove;
    private javax.swing.JSpinner spinFontSizeLeft;
    private javax.swing.JSpinner spinFontSizeRight;
    private javax.swing.JSpinner spinNoOfPages;
    private javax.swing.JTextField txtAbove;
    private javax.swing.JTextField txtBarBelowRight;
    private javax.swing.JLabel txtBarcode;
    private javax.swing.JTextField txtBarcodeText;
    private javax.swing.JTextField txtBelowLeft;
    // End of variables declaration//GEN-END:variables
}
